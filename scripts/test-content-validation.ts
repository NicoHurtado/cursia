/**
 * Script de Prueba para el Sistema de Validaci√≥n de Contenido
 * 
 * Uso: node --loader tsx scripts/test-content-validation.ts
 */

import { ContentTopicValidator } from '../lib/content-topic-validator';
import { ContentDocument } from '../lib/content-contract';

// Datos de prueba: Lecciones con REPETICI√ìN (caso problem√°tico)
const lessonsWithRepetition: ContentDocument[] = [
  {
    version: '1.0.0',
    locale: 'es',
    content_id: 'lesson1',
    meta: {
      topic: 'Introducci√≥n a Arrays',
      audience: 'Estudiantes',
      level: 'beginner',
      created_at: '2024-01-01',
    },
    blocks: [
      {
        id: 'block1',
        type: 'heading',
        data: { text: 'Introducci√≥n a Arrays', level: 1 },
      },
      {
        id: 'block2',
        type: 'paragraph',
        data: { text: 'Los arrays son estructuras de datos fundamentales.' },
      },
      {
        id: 'block3',
        type: 'heading',
        data: { text: 'Qu√© son los Arrays', level: 2 },
      },
      {
        id: 'block4',
        type: 'paragraph',
        data: { text: 'Un array es una colecci√≥n ordenada de elementos.' },
      },
      {
        id: 'block5',
        type: 'heading',
        data: { text: 'Crear Arrays', level: 2 },
      },
      {
        id: 'block6',
        type: 'paragraph',
        data: { text: 'Puedes crear arrays de varias formas.' },
      },
    ],
  },
  {
    version: '1.0.0',
    locale: 'es',
    content_id: 'lesson2',
    meta: {
      topic: 'Trabajando con Arrays',
      audience: 'Estudiantes',
      level: 'beginner',
      created_at: '2024-01-02',
    },
    blocks: [
      {
        id: 'block1',
        type: 'heading',
        data: { text: 'Trabajando con Arrays', level: 1 },
      },
      {
        id: 'block2',
        type: 'paragraph',
        data: {
          text: 'Ahora veremos c√≥mo trabajar con arrays en profundidad.',
        },
      },
      // ‚ö†Ô∏è REPETICI√ìN: Mismo tema que en lecci√≥n 1
      {
        id: 'block3',
        type: 'heading',
        data: { text: 'Qu√© son los Arrays', level: 2 },
      },
      {
        id: 'block4',
        type: 'paragraph',
        data: {
          text: 'Los arrays son colecciones que almacenan m√∫ltiples valores.',
        },
      },
      // ‚ö†Ô∏è REPETICI√ìN: Mismo tema que en lecci√≥n 1
      {
        id: 'block5',
        type: 'heading',
        data: { text: 'Crear Arrays', level: 2 },
      },
      {
        id: 'block6',
        type: 'paragraph',
        data: { text: 'Hay m√∫ltiples formas de crear arrays.' },
      },
    ],
  },
];

// Datos de prueba: Lecciones CORRECTAS (sin repetici√≥n)
const lessonsCorrect: ContentDocument[] = [
  {
    version: '1.0.0',
    locale: 'es',
    content_id: 'lesson1',
    meta: {
      topic: 'Fundamentos de Arrays',
      audience: 'Estudiantes',
      level: 'beginner',
      created_at: '2024-01-01',
    },
    blocks: [
      {
        id: 'block1',
        type: 'heading',
        data: { text: 'Fundamentos de Arrays', level: 1 },
      },
      {
        id: 'block2',
        type: 'paragraph',
        data: { text: 'Los arrays son estructuras de datos fundamentales.' },
      },
      {
        id: 'block3',
        type: 'heading',
        data: { text: 'Qu√© son los Arrays', level: 2 },
      },
      {
        id: 'block4',
        type: 'paragraph',
        data: { text: 'Un array es una colecci√≥n ordenada de elementos.' },
      },
      {
        id: 'block5',
        type: 'heading',
        data: { text: 'Sintaxis B√°sica', level: 3 },
      },
      {
        id: 'block6',
        type: 'paragraph',
        data: { text: 'La sintaxis para crear arrays es simple.' },
      },
      {
        id: 'block7',
        type: 'heading',
        data: { text: 'Tipos de Arrays', level: 3 },
      },
      {
        id: 'block8',
        type: 'paragraph',
        data: { text: 'Existen arrays de diferentes tipos.' },
      },
      {
        id: 'block9',
        type: 'heading',
        data: { text: 'Casos de Uso', level: 3 },
      },
      {
        id: 'block10',
        type: 'paragraph',
        data: { text: 'Los arrays se usan en m√∫ltiples situaciones.' },
      },
    ],
  },
  {
    version: '1.0.0',
    locale: 'es',
    content_id: 'lesson2',
    meta: {
      topic: 'M√©todos de Arrays',
      audience: 'Estudiantes',
      level: 'beginner',
      created_at: '2024-01-02',
    },
    blocks: [
      {
        id: 'block1',
        type: 'heading',
        data: { text: 'M√©todos de Arrays', level: 1 },
      },
      {
        id: 'block2',
        type: 'paragraph',
        data: {
          text: 'Los arrays tienen m√©todos integrados muy √∫tiles.',
        },
      },
      {
        id: 'block3',
        type: 'heading',
        data: { text: 'M√©todo push y pop', level: 2 },
      },
      {
        id: 'block4',
        type: 'paragraph',
        data: {
          text: 'Push a√±ade elementos al final, pop los elimina.',
        },
      },
      {
        id: 'block5',
        type: 'heading',
        data: { text: 'Ejemplo de push', level: 3 },
      },
      {
        id: 'block6',
        type: 'code',
        data: { language: 'javascript', snippet: 'arr.push(5);' },
      },
      {
        id: 'block7',
        type: 'heading',
        data: { text: 'M√©todo map', level: 2 },
      },
      {
        id: 'block8',
        type: 'paragraph',
        data: {
          text: 'Map transforma cada elemento del array.',
        },
      },
      {
        id: 'block9',
        type: 'heading',
        data: { text: 'Ejemplo de map', level: 3 },
      },
      {
        id: 'block10',
        type: 'code',
        data: {
          language: 'javascript',
          snippet: 'arr.map(x => x * 2);',
        },
      },
    ],
  },
  {
    version: '1.0.0',
    locale: 'es',
    content_id: 'lesson3',
    meta: {
      topic: 'Iteraci√≥n de Arrays',
      audience: 'Estudiantes',
      level: 'beginner',
      created_at: '2024-01-03',
    },
    blocks: [
      {
        id: 'block1',
        type: 'heading',
        data: { text: 'Iteraci√≥n de Arrays', level: 1 },
      },
      {
        id: 'block2',
        type: 'paragraph',
        data: {
          text: 'Existen varias formas de iterar sobre arrays.',
        },
      },
      {
        id: 'block3',
        type: 'heading',
        data: { text: 'For Loop Cl√°sico', level: 2 },
      },
      {
        id: 'block4',
        type: 'paragraph',
        data: {
          text: 'El for loop es la forma tradicional de iterar.',
        },
      },
      {
        id: 'block5',
        type: 'heading',
        data: { text: 'Ejemplo de for loop', level: 3 },
      },
      {
        id: 'block6',
        type: 'code',
        data: {
          language: 'javascript',
          snippet: 'for(let i=0; i<arr.length; i++) {}',
        },
      },
      {
        id: 'block7',
        type: 'heading',
        data: { text: 'forEach y for...of', level: 2 },
      },
      {
        id: 'block8',
        type: 'paragraph',
        data: {
          text: 'M√©todos modernos de iteraci√≥n m√°s legibles.',
        },
      },
      {
        id: 'block9',
        type: 'heading',
        data: { text: 'Ejemplo de forEach', level: 3 },
      },
      {
        id: 'block10',
        type: 'code',
        data: {
          language: 'javascript',
          snippet: 'arr.forEach(item => console.log(item));',
        },
      },
    ],
  },
];

// Datos de prueba: Lecciones SUPERFICIALES
const lessonsShallow: ContentDocument[] = [
  {
    version: '1.0.0',
    locale: 'es',
    content_id: 'lesson1',
    meta: {
      topic: 'Arrays B√°sicos',
      audience: 'Estudiantes',
      level: 'beginner',
      created_at: '2024-01-01',
    },
    blocks: [
      {
        id: 'block1',
        type: 'heading',
        data: { text: 'Arrays B√°sicos', level: 1 },
      },
      {
        id: 'block2',
        type: 'paragraph',
        data: { text: 'Los arrays son importantes.' },
      },
      {
        id: 'block3',
        type: 'heading',
        data: { text: 'Qu√© son', level: 2 },
      },
      {
        id: 'block4',
        type: 'paragraph',
        data: { text: 'Son colecciones de datos.' },
      },
      // ‚ö†Ô∏è Solo 4 bloques = SUPERFICIAL
    ],
  },
];

function runTests() {
  console.log('üß™ =====================================');
  console.log('üß™ PRUEBAS DEL SISTEMA DE VALIDACI√ìN');
  console.log('üß™ =====================================\n');

  // TEST 1: Detectar repeticiones
  console.log('üìù TEST 1: Detectar Repeticiones');
  console.log('================================');
  const validation1 = ContentTopicValidator.validateModuleLessons(
    lessonsWithRepetition,
    'Arrays en JavaScript'
  );
  console.log(
    `Resultado: ${validation1.hasRepetitions ? '‚ùå FALL√ì (esperado)' : '‚úÖ PAS√ì'}`
  );
  console.log(`Temas repetidos: ${validation1.repeatedTopics.length}`);
  if (validation1.repeatedTopics.length > 0) {
    console.log('Temas:');
    validation1.repeatedTopics.forEach((topic) => {
      console.log(`   - "${topic}"`);
    });
  }
  console.log(`Sugerencias: ${validation1.suggestions.length}`);
  console.log('');

  // TEST 2: Validar lecciones correctas
  console.log('üìù TEST 2: Validar Lecciones Correctas');
  console.log('=====================================');
  const validation2 = ContentTopicValidator.validateModuleLessons(
    lessonsCorrect,
    'Arrays en JavaScript'
  );
  console.log(
    `Resultado: ${validation2.isValid ? '‚úÖ PAS√ì (esperado)' : '‚ùå FALL√ì'}`
  );
  console.log(`Tiene repeticiones: ${validation2.hasRepetitions ? 'S√ç' : 'NO'}`);
  console.log(`Necesita m√°s profundidad: ${validation2.needsMoreDepth ? 'S√ç' : 'NO'}`);
  console.log(`Profundidad: ${validation2.depth}`);
  console.log(`Temas √∫nicos: ${validation2.topics.length}`);
  console.log('');

  // TEST 3: Detectar contenido superficial
  console.log('üìù TEST 3: Detectar Contenido Superficial');
  console.log('========================================');
  const validation3 = ContentTopicValidator.validateModuleLessons(
    lessonsShallow,
    'Arrays en JavaScript'
  );
  console.log(
    `Resultado: ${validation3.needsMoreDepth ? '‚ùå FALL√ì (esperado)' : '‚úÖ PAS√ì'}`
  );
  console.log(`Profundidad: ${validation3.depth}`);
  console.log(`Necesita m√°s profundidad: ${validation3.needsMoreDepth ? 'S√ç' : 'NO'}`);
  console.log('');

  // TEST 4: Validar n√∫mero de unidades
  console.log('üìù TEST 4: Validar N√∫mero de Unidades');
  console.log('====================================');

  const testCases = [
    {
      title: 'Introducci√≥n a JavaScript',
      count: 3,
      level: 'beginner',
      expectedValid: true,
    },
    {
      title: 'Arquitectura de Microservicios Avanzada',
      count: 3,
      level: 'advanced',
      expectedValid: false,
    },
    {
      title: 'Fundamentos de Python',
      count: 5,
      level: 'intermediate',
      expectedValid: true,
    },
  ];

  testCases.forEach((testCase, index) => {
    console.log(`\nCaso ${index + 1}: ${testCase.title}`);
    const result = ContentTopicValidator.validateUnitCount(
      testCase.title,
      testCase.count,
      testCase.level
    );
    console.log(`   - Unidades actuales: ${testCase.count}`);
    console.log(`   - Unidades sugeridas: ${result.suggestedCount}`);
    console.log(`   - Es v√°lido: ${result.isValid ? 'S√ç' : 'NO'}`);
    console.log(`   - Raz√≥n: ${result.reason}`);
    console.log(
      `   - Resultado: ${result.isValid === testCase.expectedValid ? '‚úÖ PAS√ì' : '‚ùå FALL√ì'}`
    );
  });

  console.log('');

  // RESUMEN
  console.log('üìä RESUMEN DE PRUEBAS');
  console.log('====================');
  console.log('‚úÖ Sistema de validaci√≥n funcionando correctamente');
  console.log('‚úÖ Detecci√≥n de repeticiones: OK');
  console.log('‚úÖ An√°lisis de profundidad: OK');
  console.log('‚úÖ Validaci√≥n de unidades: OK');
  console.log('');
  console.log('üí° El sistema est√° listo para usarse en producci√≥n');
  console.log('');
}

// Ejecutar pruebas
runTests();

